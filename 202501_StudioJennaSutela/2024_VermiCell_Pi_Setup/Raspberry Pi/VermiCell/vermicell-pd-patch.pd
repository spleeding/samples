#N canvas 51 0 1084 945 12;
#X obj 117 1148 dac~;
#X obj 100 110 soundfiler;
#X msg 100 71 read -resize compostsaxophone.wav Channel1 Channel2;
#N canvas 0 50 450 250 (subpatch) 0;
#X array Channel1 1.04958e+07 float 2;
#X coords 0 1 1.04958e+07 -1 314 128 1;
#X restore 579 -48 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array Channel2 1.04958e+07 float 2;
#X coords 0 1 1.04958e+07 -1 314 128 1 0 0;
#X restore 576 105 graph;
#X obj 56 433 tabplay~ Channel1;
#X obj 186 434 tabplay~ Channel2;
#X obj 56 364 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 57 1087 *~ 0.2;
#X obj 184 1086 *~ 0.2;
#X obj 56 259 loadbang;
#X obj 100 9 loadbang;
#X obj 56 312 delay 30000;
#X obj 578 -241 loadbang;
#X msg 578 -197 \; pd dsp 1;
#X floatatom 222 786 4 0 1023 0 - - - 0;
#X obj 210 666 unpack f f;
#X obj 210 709 << 8;
#X obj 222 748 +;
#X text 95 -263 VERMI CELL PURE DATA PATCH Studio Jenna Sutela 2023 This patch laoads the audiofile for vermi cell into to two arrays \, one for each sound channel. Then it plays thefile in a loop \, with a dynamic echo which is constantly altered by info received by listening to localhost on port 3333 A python program reads electricity from a battery and sends that info to the patch which then adjusts the length of the echo.;
#X text 97 -20 Loading sound file into two arrays.;
#X text 575 -96 The two soundfile arrays:;
#X text 679 -246 Turning audio on so that patch can be called from terminal.;
#X text 431 498 Defing the echo object.;
#X text 620 954 Reading the echo objec \, according to a value specified by the data coming from the netreceive object.;
#X text 204 601 Network receiver object controlling delay.;
#X text 744 800 This is the feedback mechanim. It takes a fraction of the original echo and sends it back.;
#X text 245 1085 Controlling sound level on channel 1 and 2;
#X text 167 1148 Outputting sound to;
#X text 164 314 Waiting 30 seconds to ensure arrays are loaded;
#X text 56 234 Initializing playback and loop.;
#X obj 210 625 netreceive -u -b 3000;
#X obj 116 1236 print;
#X obj 116 1261 cnv 20 133 80 empty empty empty 20 12 0 12 #e0e0e0 #404040 0;
#X obj 859 486 env~;
#X obj 861 547 int, f 5;
#X obj 911 640 print;
#X obj 840 639 netsend;
#X msg 672 517 connect localhost 3010;
#X text 276 700 Shifts the bytes value 8 to the left \, to ensure addition is correct.;
#X text 214 819 Threshold 750 Delay time 150 or 0;
#X obj 861 515 * 2;
#X text 916 505 Adjusting so max amplitude gets closer 255 IMPORTANT it cannot go above that.;
#X obj 202 841 expr if($f1 > 750 \, 200 \, 0);
#X obj 683 827 *~ 0.7;
#X obj 436 524 delwrite~ MainEcho 200;
#X obj 452 955 delread~ MainEcho 200;
#X connect 2 0 1 0;
#X connect 5 0 8 0;
#X connect 5 0 45 0;
#X connect 6 0 9 0;
#X connect 6 0 34 0;
#X connect 6 0 45 0;
#X connect 6 1 7 0;
#X connect 7 0 5 0;
#X connect 7 0 6 0;
#X connect 7 0 38 0;
#X connect 8 0 0 0;
#X connect 9 0 0 1;
#X connect 10 0 12 0;
#X connect 11 0 2 0;
#X connect 12 0 7 0;
#X connect 13 0 14 0;
#X connect 15 0 43 0;
#X connect 16 0 17 0;
#X connect 16 1 18 1;
#X connect 17 0 18 0;
#X connect 18 0 15 0;
#X connect 31 0 16 0;
#X connect 34 0 41 0;
#X connect 35 0 36 0;
#X connect 35 0 37 0;
#X connect 38 0 37 0;
#X connect 41 0 35 0;
#X connect 43 0 46 0;
#X connect 44 0 45 0;
#X connect 46 0 8 0;
#X connect 46 0 9 0;
#X connect 46 0 44 0;
#X coords 0 945 1 944 85 60 0;
